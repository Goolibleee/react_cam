{"version":3,"sources":["reportWebVitals.js","Reader.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Reader","props","videoRef","useRef","canvasRef","overlayRef","_useState","useState","_useState2","_slicedToArray","resolution","setResolution","_useState3","_useState4","result","setResult","_useState5","_useState6","showTransform","setShowTransform","useEffect","isMounted","console","log","inter","setInterval","requestAnimationFrame","tick","clearInterval","navigator","mediaDevices","getUserMedia","video","facingMode","zoom","stream","current","srcObject","setAttribute","play","_unused","window","innerWidth","toString","innerHeight","ctx","getContext","imageWidth","videoWidth","imageHeight","videoHeight","drawLine","x","y","x1","y1","color","width","context","info","style","arguments","length","undefined","_style$color","_style$width","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","conv3x","data","idx","w","m","conv3y","gradient","canvas","pixels","getImageData","height","mask","l","buff","constructor","ArrayBuffer","i","dx","dy","Math","sqrt","set","gradient_internal","putImageData","THRESHOLD","drawImage","j","h","res","arr","Array","cx","cy","xx","yy","angle","PI","lx","cos","ly","sin","d","parseInt","dist","sum","ssum","mean","variance","margin","core","houghTransform","imageCaptured","e","target","files","file","type","size","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","error","getBase64","img","axios","method","mode","crossDomain","url","headers","withCredentials","credentials","image","_jsxs","children","_jsx","id","accept","capture","onChange","onClick","toDataURL","document","getElementById","display","toggle","process","ReactDOM","render","React","StrictMode"],"mappings":"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","file":"static/js/main.4b54e2e5.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Reader.css\";\nimport axios from \"axios\";\n\n\nfunction Reader(props) {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const overlayRef = useRef();\n    const [resolution, setResolution] = useState([0,0]);\n    const [result, setResult] = useState(\"\");\n    const [showTransform, setShowTransform] = useState(true);\n\n    useEffect(function () {\n        let isMounted = true;\n        console.log(\"Set interval\");\n        const inter = setInterval(() => {\n            if (!isMounted)\n            {\n                console.log(\"Unmounted reader call\");\n                return;\n            }\n            requestAnimationFrame(tick);\n        }, 200);\n        return () => {\n            console.log(\"Clear interval for reader\");\n            isMounted = false;\n            clearInterval(inter);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(\n        function () {\n            navigator.mediaDevices\n                .getUserMedia({ video: { facingMode: \"environment\", zoom: true } })\n                .then(function (stream) {\n                    console.log(stream);\n                    console.log(\"TEST\");\n                    try {\n                        videoRef.current.srcObject = stream;\n                        videoRef.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n                        videoRef.current.play();\n                        /*\n                        const [track] = stream.getVideoTracks();\n                        const capabilities = track.getCapabilities();\n                        const settings = track.getSettings();\n                        const imageWidth  = videoRef.current.videoWidth;\n                        const imageHeight = videoRef.current.videoHeight;\n                        setResolution([imageWidth, imageHeight]);\n                        console.log(\"Set resulution \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n                        */\n\n/*\n                        if ('zoom' in settings)\n                        {\n                            track.applyConstraints({advanced: [ {zoom: capabilities.zoom.max}]});\n                        }\n*/\n/*\n                        if (capabilities.focusDistance)\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Change focus\");\n                            track.applyConstraints({advanced: [ {focusMode: \"auto\", focusDistance: capabilities.focusDistance.min}]});\n                        }\n                        else\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Cannot change focus\");\n                        }\n*/\n                    } catch {}\n                });\n            console.log(window.innerWidth.toString() + \"x\" + window.innerHeight.toString());\n        },\n        [videoRef]\n    );\n    useEffect(\n        function () {\n            if (!overlayRef || !overlayRef.current)\n                return;\n            var ctx = overlayRef.current.getContext(\"2d\");\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n //           drawLine(ctx, { x: 20, y: 20, x1: 20, y1: 100 });\n\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: imageWidth, y1: imageHeight/2-75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2+75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: 0, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: imageWidth, y: imageHeight-75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n\n//            drawLine(ctx, { x: 300, y: 250, x1: 260, y1: 70 }, { color: 'green', width: 5 });\n\n//            drawLine(ctx, { x: 70, y: 240, x1: 160, y1: 120 }, { color: 'blue' });\n\n            drawLine(ctx, { x: 0, y: 3, x1: imageWidth, y1: 3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 3, y: 0, x1: 3, y1: imageHeight }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 0, y: imageHeight-3, x1: imageWidth, y1: imageHeight-3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: imageWidth-3, y: 0, x1: imageWidth-3, y1: imageHeight}, { color: 'green', width: 5 });\n\n        }, [resolution]\n    );\n    const drawLine = (context, info, style = {}) => {\n        const { x, y, x1, y1 } = info;\n        const { color = 'black', width = 1 } = style;\n\n        context.beginPath();\n        context.moveTo(x, y);\n        context.lineTo(x1, y1);\n        context.strokeStyle = color;\n        context.lineWidth = width;\n        context.stroke();\n    }\n\n/*\n    var sendBase64ToServer = function(base64) {\n        var httpPost = new XMLHttpRequest(),\n        path = \"http://127.0.0.1:8080/uploadImage\",\n        data = JSON.stringify({image: base64});\n        httpPost.onreadystatechange = function(err) {\n            if (httpPost.readyState == 4 && httpPost.status == 200){\n                console.log(httpPost.responseText);\n            } else {\n                console.log(err);\n            }\n        };\n        // Set the content type of the request to json since that's what's being sent\n        httpPost.setHeader('Content-Type', 'application/json');\n        httpPost.open(\"POST\", path, true);\n        httpPost.send(data);\n    };\n    var uploadImage = function(data, type){\n        sendBase64ToServer(data);\n    };\n*/\n    function toggle() {\n        var x = document.getElementById(\"canvas\");\n        console.log(showTransform);\n        if (showTransform) {\n            x.style.display = \"none\";\n        } else {\n            x.style.display = \"block\";\n        }\n        setShowTransform(!showTransform);\n    }\n\n    function capture() {\n        console.log(\"Capture\");\n        var canvas = canvasRef.current.getContext(\"2d\");\n        const imageWidth  = videoRef.current.videoWidth;\n        const imageHeight = videoRef.current.videoHeight;\n        canvasRef.current.width = imageWidth;\n        canvasRef.current.height = imageHeight;\n        canvas.drawImage(\n            videoRef.current,\n            0,\n            0,\n            canvasRef.current.width,\n            canvasRef.current.height\n        );\n        overlayRef.current.height = videoRef.current.videoHeight;\n        overlayRef.current.width = videoRef.current.videoWidth;\n        setResolution([imageWidth, imageHeight]);\n\n        const img = canvasRef.current.toDataURL('image/png');\n//        console.log(img);\n        axios({\n            method: \"post\",\n            mode: 'no-cors',\n            crossDomain: 'true',\n            url: \"https://10.0.0.68:8080/uploadImage\",\n//            url: \"https://localhost:8080/uploadImage\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n            },\n            withCredentials: false,\n            credentials: 'same-origin',\n            data: {\n                image: img\n            }\n        });\n    }\n    function conv3x(data, idx, w, m){\n        return (m[0]*data[idx - w - 4] + m[1]*data[idx - 4] + m[2]*data[idx + w - 4]\n        -m[0]*data[idx - w + 4] - m[1]*data[idx + 4] - m[2]*data[idx + 4 + 4]);\n    }\n\n    function conv3y(data, idx, w, m){\n        return (m[0]*data[idx - w - 4] + m[1]*data[idx - w] + m[2]*data[idx - w + 4]\n        -(m[0]*data[idx + w - 4] + m[1]*data[idx + w] + m[2]*data[idx + w + 4]));\n    }\n\n\n    /**\n    * @param pixels - Object of image parameters\n    * @param mask - gradient operator e.g. Prewitt, Sobel, Scharr, etc.\n    */\n    function gradient_internal(pixels, mask)\n    {\n        var data = pixels.data;\n        var w = pixels.width*4;\n        var l = data.length - w - 4;\n        var buff = new data.constructor(new ArrayBuffer(data.length));\n\n        for (var i = w + 4; i < l; i+=4){\n            var dx = conv3x(data, i, w, mask);\n            var dy = conv3y(data, i, w, mask);\n            buff[i] = buff[i + 1] = buff[i + 2] = Math.sqrt(dx*dx + dy*dy);\n            buff[i + 3] = 255;\n        }\n        pixels.data.set(buff);\n    }\n\n    /**\n    * @param canvas - HTML5 Canvas elementFromPoint\n    */\n    function gradient(canvas){\n        var context = canvas.getContext('2d');\n        var pixels = context.getImageData(0, 0, canvas.width,canvas.height);\n        gradient_internal(pixels, [1, 2, 1]); // Apply Sobel operator\n        context.putImageData(pixels, 0, 0);\n    }\n    const THRESHOLD = 120;\n    function houghTransform(canvas) {\n        var context = canvas.getContext('2d');\n        var pixels = context.getImageData(0, 0, canvas.width,canvas.height);\n\n        var i, j;\n        var data = pixels.data;\n        const w = pixels.width;\n        const h = pixels.height;\n        const res = w * h;\n        var buff = new data.constructor(new ArrayBuffer(data.length));\n        var arr = new Array(data.length);\n        const cx = pixels.width / 2;\n        const cy = pixels.height / 2;\n        for (i = 0; i < res; i+=1){\n            arr[i] = 0;\n        }\n\n        i = 0;\n        for (var y = 0; y < h; y += 1) {\n            for (var x = 0 ; x < w ; x+=1, i+=4){\n                const value = data[i];\n                if (value > THRESHOLD)\n                {\n                    const xx = x - cx;\n                    const yy = y - cy;\n                    for (j = 0 ; j < w ; j+=5) {\n                        const angle = ((j - cx) / cx + 1) * Math.PI / 2;\n                        const lx = Math.cos(angle);\n                        const ly = Math.sin(angle);\n\n                        var d = parseInt((xx * lx + yy * ly) / 2 ) + cy;\n                        if (d >= h)\n                            d = h - 1;\n                        if (d < 0)\n                            d = 0\n                        const xxx = parseInt((j)/5)\n                        arr[d * w + xxx] += 1;\n                    }\n                }\n            }\n        }\n        j = 0;\n//        document.getElementsById(\"text\").innerHtml(res);\n        var dist = new Array(h);\n        for (i = 0 ; i < h ; i++)\n            dist[i] = 0\n\n        for (i = 0 ; i < res ; i++, j+=4)\n        {\n            var width = parseInt(i / w)\n            buff[j] = buff[j+1] = buff[j+2] = arr[i];\n            buff[j+3] = 255;\n            if (width > w/2 - w*0.2 && width < w/2 + w*0.2)\n                dist[parseInt(i / w)] += arr[i];\n        }\n        var sum = 0;\n        var ssum = 0;\n        const l = h\n        for (i = 0 ; i < l; i++)\n        {\n            sum += dist[i]\n            ssum += (dist[i] * dist[i])\n        }\n\n        const mean = sum / l\n        const variance = (ssum / l - mean * mean);\n        const margin = l * 0.2;\n        var core = 0;\n        for (i = parseInt(l/2 - margin) ; i < l/2 + margin ; i++)\n        {\n            core += dist[i];\n        }\n        core = core / (margin * 2);\n\n        setResult(mean.toString() + \", \" + variance.toString() + \" (\" + core.toString() + \" \" + (core / mean).toString() + \")\");\n//        setResult(sum.toString() + \", \" + ssum.toString());\n\n        pixels.data.set(buff);\n        context.putImageData(pixels, 0, 0);\n    }\n\n    function tick() {\n\n\n//            console.log('tick');\n\n//            var videoElement = document.getElementById(\"video\")\n            if (!videoRef || !videoRef.current)\n                return;\n            console.log(videoRef.current.videoHeight.toString() + \"x\" + videoRef.current.videoWidth);\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            canvasRef.current.height = imageWidth;\n            canvasRef.current.width = imageHeight;\n\n            if ( imageWidth * imageHeight === 0)\n                return;\n //          console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n/*\n            if (image) {\n                const str = image.toDataURL();\n                console.log(str);\n            }\n*/\n//            uploadImage(image, \"image/png\");\n/*\n            axios({\n                method: \"post\",\n                mode: 'no-cors',\n                url: \"https://10.0.0.68:8080/uploadImage\",\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n                },\n                withCredentials: true,\n                credentials: 'same-origin'\n            });\n*/\n//            console.log(image);\n\n            var ctx = canvasRef.current.getContext(\"2d\");\n            ctx.drawImage(\n                videoRef.current,\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            gradient(canvasRef.current);\n            houghTransform(canvasRef.current);\n\n            /*\n            const str = canvasRef.toDataURL();\n            console.log(str);\n            var imageData = ctx.getImageData(\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            BarcodeReader({\n                image: imageData,\n//                barcode: 'code-2of5',\n                barcode: 'coda-128',\n                options: {}\n            }).then(code => {\n                console.log('['+code+']');\n            }).catch(err => {\n                console.log(err);\n            })\n            */\n            /*\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\n                inversionAttempts: \"dontInvert\",\n            });\n            if (code) {\n                console.log(code.data);\n                setResult({ data: code.data, time: new Date() });\n            }\n            */\n            return;\n    }\n    function getBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n    }\n    function imageCaptured(e)\n    {\n        console.log(\"Image Captured\");\n        if (e.target.files && e.target.files.length > 0)\n        {\n            const file = e.target.files[0];\n            console.log(file)\n            console.log(file.type);\n            setResult(file.type + \" \" + file.size.toString());\n            getBase64(file).then(\n                img => {\n                    axios({\n                        method: \"post\",\n                        mode: 'no-cors',\n                        crossDomain: 'true',\n                        url: \"https://10.0.0.68:8080/uploadImage\",\n            //            url: \"https://localhost:8080/uploadImage\",\n                        headers: {\n                            \"Access-Control-Allow-Origin\": \"*\",\n                            \"Content-Type\": \"application/json\",\n                            \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n                        },\n                        withCredentials: false,\n                        credentials: 'same-origin',\n                        data: {\n                            image: img\n                        }\n                });\n            });\n        }\n    }\n\n/*\n        <div>\n                <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} width={640} height={480}></canvas>\n                <Webcam id=\"webcam\" ref={webcamRef} screenshotFormat=\"image/png\" width={640} height={480}\n                    videoConstraints={videoConstraints}\n                />\n            <div>Test 2</div>\n        </div>\n*/\n\n/*\n            <canvas id=\"overlay\" className=\"overlay\" ref={overlayRef}></canvas>\n            <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef}></canvas>\n            <video id=\"video\" ref={videoRef}/>\n            */\n    return (\n        <div>\n            <input type=\"file\" id=\"barcodeScan\" accept=\"image/*\" capture=\"environment\" onChange={(e) => imageCaptured(e)} />\n            <div id=\"text\">{result}</div>\n            <button type=\"button\" onClick={() => capture()}> Capture </button>\n            <button type=\"button\" onClick={() => toggle()}> Toggle </button>\n            <h3>\n                v {process.env.REACT_APP_VERSION}\n            </h3>\n        </div>\n    );\n}\n\nexport default Reader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Reader from \"./Reader\";\n//import Scanner from \"./Scanner\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Reader />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}