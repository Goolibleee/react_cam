{"version":3,"sources":["reportWebVitals.js","Reader.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Reader","props","video","useRef","canvasRef","_useState","useState","_useState2","_slicedToArray","result","setResult","useEffect","onScan","data","isMounted","console","log","inter","setInterval","requestAnimationFrame","tick","clearInterval","navigator","mediaDevices","getUserMedia","facingMode","stream","current","srcObject","setAttribute","play","_unused","drawLine","ctx","info","style","arguments","length","undefined","x","y","x1","y1","_style$color","color","_style$width","width","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","readyState","HAVE_ENOUGH_DATA","height","videoHeight","videoWidth","getContext","drawImage","getImageData","_jsxs","children","_jsx","filter","ref","className","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"8IAYeA,G,KAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,SAAAC,GAAkD,IAA/CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,EACV,GAEJ,G,cC8GeS,MAtHf,SAAgBC,GACZ,IAAMC,EAAQC,mBACRC,EAAYD,mBAClBE,EAA4BC,qBAAUC,EAAAC,YAAAH,EAAA,GAA/BI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAExBI,qBACI,WACQF,IACAR,EAAMW,OAAOH,EAAOI,MACpBH,EAAU,MAElB,GAEA,CAACD,IAGLE,qBAAU,WACN,IAAIG,GAAY,EAChBC,QAAQC,IAAI,gBACZ,IAAMC,EAAQC,aAAY,WACjBJ,EAKLK,sBAAsBC,GAHlBL,QAAQC,IAAI,wBAIpB,GAAG,KACH,OAAO,WACHD,QAAQC,IAAI,6BACZF,GAAY,EACZO,cAAcJ,EAClB,CAEJ,GAAG,IAEHN,qBACI,WACIW,UAAUC,aACLC,aAAa,CAAEtB,MAAO,CAAEuB,WAAY,iBACpChC,MAAK,SAAUiC,GACZX,QAAQC,IAAIU,GACZX,QAAQC,IAAI,QACZ,IACId,EAAMyB,QAAQC,UAAYF,EAC1BxB,EAAMyB,QAAQE,aAAa,eAAe,GAC1C3B,EAAMyB,QAAQG,MAClB,CAAE,MAAAC,GAAO,CACb,GACR,GACA,CAAC7B,EAAOE,IAEZ,IAAM4B,EAAW,SAACC,EAAKC,GAAsB,IAAhBC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1BG,EAAiBL,EAAjBK,EAAGC,EAAcN,EAAdM,EAAGC,EAAWP,EAAXO,GAAIC,EAAOR,EAAPQ,GAClBC,EAAuCR,EAA/BS,aAAK,IAAAD,EAAG,QAAOA,EAAAE,EAAgBV,EAAdW,aAAK,IAAAD,EAAG,EAACA,EAElCZ,EAAIc,YACJd,EAAIe,OAAOT,EAAGC,GACdP,EAAIgB,OAAOR,EAAIC,GACfT,EAAIiB,YAAcN,EAClBX,EAAIkB,UAAYL,EAChBb,EAAImB,QACR,EAEA,SAAShC,IACL,GAAIlB,GAASA,EAAMyB,SAAWzB,EAAMyB,QAAQ0B,aAAenD,EAAMyB,QAAQ2B,iBAAkB,CACvFlD,EAAUuB,QAAQ4B,OAASrD,EAAMyB,QAAQ6B,YACzCpD,EAAUuB,QAAQmB,MAAQ5C,EAAMyB,QAAQ8B,WAExC,IAAIxB,EAAM7B,EAAUuB,QAAQ+B,WAAW,MAGvCzB,EAAI0B,UACAzD,EAAMyB,QACN,EACA,EACAvB,EAAUuB,QAAQmB,MAClB1C,EAAUuB,QAAQ4B,QAENtB,EAAI2B,aAChB,EACA,EACAxD,EAAUuB,QAAQmB,MAClB1C,EAAUuB,QAAQ4B,QAkBtB,OAhBAvB,EAASC,EAAK,CAAEM,EAAG,GAAIC,EAAG,GAAIC,GAAI,GAAIC,GAAI,MAE1CV,EAASC,EAAK,CAAEM,EAAG,GAAIC,EAAG,GAAIC,GAAI,IAAKC,GAAI,KAAO,CAAEE,MAAO,QAE3DZ,EAASC,EAAK,CAAEM,EAAG,IAAKC,EAAG,IAAKC,GAAI,IAAKC,GAAI,IAAM,CAAEE,MAAO,QAASE,MAAO,SAE5Ed,EAASC,EAAK,CAAEM,EAAG,GAAIC,EAAG,IAAKC,GAAI,IAAKC,GAAI,KAAO,CAAEE,MAAO,QAWhE,CACJ,CAEA,OACIiB,eAAA,OAAAC,SAAA,CACIC,cAAA,SACI5B,MAAO,CACH6B,OAAQ,oBAEZC,IAAK/D,IACA,SAET6D,cAAA,UAAQG,UAAU,SAASD,IAAK7D,MAG5C,EChHA+D,IAASC,OACPL,cAACM,IAAMC,WAAU,CAAAR,SACfC,cAAC/D,EAAM,MAETuE,SAASC,eAAe,SAM1BlF,G","file":"static/js/main.d19dbc6f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useRef, useState } from \"react\";\n\nfunction Reader(props) {\n    const video = useRef();\n    const canvasRef = useRef();\n    const [result, setResult] = useState();\n\n    useEffect(\n        function () {\n            if (result) {\n                props.onScan(result.data);\n                setResult(null);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [result]\n    );\n\n    useEffect(function () {\n        let isMounted = true;\n        console.log(\"Set interval\");\n        const inter = setInterval(() => {\n            if (!isMounted)\n            {\n                console.log(\"Unmounted reader call\");\n                return;\n            }\n            requestAnimationFrame(tick);\n        }, 200);\n        return () => {\n            console.log(\"Clear interval for reader\");\n            isMounted = false;\n            clearInterval(inter);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(\n        function () {\n            navigator.mediaDevices\n                .getUserMedia({ video: { facingMode: \"environment\" } })\n                .then(function (stream) {\n                    console.log(stream);\n                    console.log(\"TEST\");\n                    try {\n                        video.current.srcObject = stream;\n                        video.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n                        video.current.play();\n                    } catch {}\n                });\n        },\n        [video, canvasRef]\n    );\n    const drawLine = (ctx, info, style = {}) => {\n        const { x, y, x1, y1 } = info;\n        const { color = 'black', width = 1 } = style;\n\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x1, y1);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = width;\n        ctx.stroke();\n    }\n\n    function tick() {\n        if (video && video.current && video.current.readyState === video.current.HAVE_ENOUGH_DATA) {\n            canvasRef.current.height = video.current.videoHeight;\n            canvasRef.current.width = video.current.videoWidth;\n\n            var ctx = canvasRef.current.getContext(\"2d\");\n\n\n            ctx.drawImage(\n                video.current,\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            var imageData = ctx.getImageData(\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            drawLine(ctx, { x: 20, y: 20, x1: 20, y1: 100 });\n\n            drawLine(ctx, { x: 50, y: 50, x1: 200, y1: 100 }, { color: 'red' });\n\n            drawLine(ctx, { x: 300, y: 250, x1: 260, y1: 70 }, { color: 'green', width: 5 });\n\n            drawLine(ctx, { x: 70, y: 240, x1: 160, y1: 120 }, { color: 'blue' });\n            /*\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\n                inversionAttempts: \"dontInvert\",\n            });\n            if (code) {\n                console.log(code.data);\n                setResult({ data: code.data, time: new Date() });\n            }\n            */\n            return;\n        }\n    }\n\n    return (\n        <div>\n            <video\n                style={{\n                    filter: \"brightness(100%)\",\n                }}\n                ref={video}\n            ></video>\n            Canvas\n            <canvas className=\"canvas\" ref={canvasRef} ></canvas>\n        </div>\n    );\n}\n\nexport default Reader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Reader from \"./Reader\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Reader />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}