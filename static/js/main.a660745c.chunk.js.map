{"version":3,"sources":["components/Reader.js","Util.js","images/Logo.png","pages/Scan.js","components/ToPrint.js","pages/Print.js","pages/Manual.js","Doc.js","api/spreadsheetID.js","App.js","reportWebVitals.js","index.js"],"names":["PAUSE_COUNT","delayCount","Reader","props","video","useRef","canvasRef","_useState","useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","black","setBlack","tick","periodic","setTimeout","current","readyState","HAVE_ENOUGH_DATA","height","videoHeight","width","videoWidth","canvas","getContext","drawImage","imageData","getImageData","code","jsQR","data","inversionAttempts","console","log","time","Date","useEffect","onScan","isMounted","inter","setInterval","requestAnimationFrame","clearInterval","navigator","mediaDevices","getUserMedia","facingMode","then","stream","srcObject","setAttribute","play","_unused","_jsxs","children","_jsx","style","filter","ref","hidden","CODE_PER_SCREEN","CODE_PER_PAGE","sleep","Promise","resolve","Math","ceil","String","prototype","format","formatted","this","i","arguments","length","regexp","RegExp","replace","toastProp","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","SCAN_INTERVAL","CHECK_INTERVAL","scanList","scanHistory","recentList","shutter","recentCount","Scan","toLocaleDateString","todayDate","setTodayDate","currentTimeSec","setCurrentTimeSec","_handleScan","_asyncToGenerator","_regeneratorRuntime","mark","_callee4","id","wrap","_context4","prev","next","getTime","parseInt","push","abrupt","stop","apply","Recent","header","map","entry","checkDuplicate","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","f","_initialize","_callee","tD","prop","initNoti","tS","date","_prop2","_context","toast","dismiss","doc","isOpen","sheetsByDate","sent","type","TYPE","WARNING","warning","text","reloadPage","ERROR","error","noSheet","getCachedList","has","toString","info","loading","sheet","readList","title","SUCCESS","render","loaded","update","initialize","checkId","_x2","_checkId","_callee3","currentTime","action","_context3","toLocaleTimeString","hour12","hour","minute","getStudent","noStudent","idx","checkIn","valueType","success","name","checkOut","warn","alreadyDone","concat","_toConsumableArray","shift","updateCell","interval","_callee2","timeSec","_context2","second","src","Logo","alt","_x","ret","ToPrint","React","forwardRef","className","Print","inputText","setInputText","studentList","setStudentList","_useState5","_useState6","printList","setPrintList","_useDebounce","useDebounce","searchQuery","_useState7","_useState8","searchResults","setSearchResults","_useState9","_useState10","selectedCodes","setSelectedCodes","_useState11","_useState12","displayedCodes","setDisplayedCodes","_useState13","_useState14","showMarked","setShowMarked","_useState15","_useState16","showSearched","setShowSearched","_useState17","_useState18","pageNum","setPageNum","printRef","handlePrint","useReactToPrint","content","_addMarkedStudents","results","resultString","resultObject","toLowerCase","sheetInfo","cachedData","_prop","idIdx","idList","nameIdx","nameList","list","printIdx","findMostRecentSheet","failedToOpen","print","min","t0","t1","succeededToOpen","findStudents","_findStudents","row","includes","finish","_query","sr","query","startIdx","count","slice","placeholder","onChange","event","target","onClick","add","_Fragment","QRCode","size","c","pages","page","printCodes","_loop","_step2","ids","Set","_iterator2","selectedIds","getCurrentTime","Manual","sheetKey","selectedId","selectIdImpl","selectId","_ref2","_callee5","_context5","_objectSpread","showEntries","cIn","cOut","cInDisabled","cOutDisabled","formattedValue","_callee6","_context6","disabled","spreadsheetID","production","development","GoogleSpreadsheet","require","dateFormatOptions","year","month","day","_MS_PER_DAY","dateDiffInDays","a","b","utc1","UTC","getFullYear","getMonth","getDate","utc2","abs","floor","findHeader","headers","Doc","_classCallCheck","state","initialized","cachedList","_createClass","key","_openDoc","useServiceAccountAuth","config","loadInfo","Object","keys","_sheetsByTitle","arg","sheetsByTitle","_sheetsByDate","_i","_dateFormatOptions","option","str","found","_i2","_dateFormatOptions2","_option","dateStr","loadCells","createHeader","classIdx","checkInIdx","checkOutIdx","columnCount","getCell","class","_readList","rowIdx","ROW_RANGE","lastIdx","rowSize","increment","nullCount","_args4","rowCount","fromCharCode","_x3","_getStudent","todaySheet","studentNumber","studentRowNumber","findStudentRow","ASCII_A","_x4","_updateCell","saveUpdatedCells","_findStudentRow","_callee7","ID","_context7","_x5","_findMostRecentSheet","_callee8","sheetDate","today","_context8","setDate","App","process","APP_NAME","APP_VERSION","openDoc","Router","Link","to","Routes","Route","path","element","ToastContainer","newestOnTop","rtl","pauseOnFocusLoss","transition","Zoom","icon","REACT_APP_VERSION","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a660745c.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport jsQR from \"jsqr\";\nimport \"../App.css\";\n\nconst PAUSE_COUNT = 5;\nlet delayCount = 0;\nfunction Reader(props) {\n    const video = useRef();\n    const canvasRef = useRef();\n    const [result, setResult] = useState();\n    const [black, setBlack] = useState(false);\n\n    function shutter() {\n        setBlack(true);\n        setTimeout(() => {\n            setBlack(false);\n        }, 300);\n    }\n\n    useEffect(\n        function () {\n            if (result) {\n                props.onScan(result.data);\n                setResult(null);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [result]\n    );\n\n    useEffect(function () {\n        let isMounted = true;\n        const inter = setInterval(() => {\n            if (!isMounted)\n            {\n                console.log(\"Unmounted reader call\");\n                return;\n            }\n            requestAnimationFrame(tick);\n        }, 200);\n        return () => {\n            console.log(\"Clear interval for reader\");\n            isMounted = false;\n            clearInterval(inter);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(\n        function () {\n            navigator.mediaDevices\n                .getUserMedia({ video: { facingMode: \"environment\" } })\n                .then(function (stream) {\n                    console.log(stream);\n                    try {\n                        video.current.srcObject = stream;\n                        video.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n                        video.current.play();\n                    } catch {}\n                });\n        },\n        [video, canvasRef]\n    );\n\n    function tick() {\n        if (props.periodic()) shutter();\n        if (--delayCount > 0) return;\n        if (video && video.current && video.current.readyState === video.current.HAVE_ENOUGH_DATA) {\n            canvasRef.current.height = video.current.videoHeight;\n            canvasRef.current.width = video.current.videoWidth;\n\n            var canvas = canvasRef.current.getContext(\"2d\");\n\n            canvas.drawImage(\n                video.current,\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            var imageData = canvas.getImageData(\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\n                inversionAttempts: \"dontInvert\",\n            });\n            if (code) {\n                console.log(code.data);\n                setResult({ data: code.data, time: new Date() });\n                delayCount = PAUSE_COUNT;\n            }\n            return;\n        }\n    }\n\n    return (\n        <div>\n            <video\n                style={{\n                    filter: black ? \"brightness(0%)\" : \"brightness(100%)\",\n                }}\n                ref={video}\n            ></video>\n            <canvas ref={canvasRef} hidden></canvas>\n        </div>\n    );\n}\n\nexport default Reader;\n","export const CODE_PER_SCREEN = 24;\r\nexport const CODE_PER_PAGE = 12;\r\n\r\nexport const sleep = (time) => {\r\n   return new Promise((resolve) => setTimeout(resolve, Math.ceil(time * 1000)));\r\n};\r\n\r\ninterface String\r\n{\r\n    format: () => String;\r\n}\r\n\r\n// eslint-disable-next-line no-extend-native\r\nString.prototype.format = function() {\r\n    let formatted = this;\r\n    for (let i = 0; i < arguments.length; i++) {\r\n        let regexp = new RegExp('\\\\{'+i+'\\\\}', 'gi');\r\n        formatted = formatted.replace(regexp, arguments[i]);\r\n    }\r\n    return formatted;\r\n}\r\n\r\nexport const toastProp = {\r\n    position: \"top-center\",\r\n    autoClose: 3000,\r\n    hideProgressBar: true,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    progress: undefined\r\n}\r\n","export default __webpack_public_path__ + \"static/media/Logo.f0526f33.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Reader from \"../components/Reader\";\r\nimport { sleep, toastProp } from \"../Util\";\r\n\r\nimport \"./Scan.css\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport text from \"../api/text\";\r\n\r\nconst SCAN_INTERVAL = 1000;\r\nconst CHECK_INTERVAL = 5000;\r\nconst scanList = [];\r\nconst scanHistory = [];\r\nconst recentList = [];\r\nlet shutter = false;\r\n\r\nlet recentCount = 0;\r\nfunction addToRecentList(value) {\r\n    recentList.push([recentCount, ...value]);\r\n    if (recentList.length > 5) recentList.shift();\r\n    recentCount += 1;\r\n}\r\n\r\nfunction Scan(props) {\r\n    const [todayDate, setTodayDate] = useState(new Date().toLocaleDateString());\r\n    const [currentTimeSec, setCurrentTimeSec] = useState(\"\");\r\n\r\n    useEffect(function() {\r\n        console.log(\"Update today date \" + todayDate);\r\n    }, [todayDate]);\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            console.log(\"Wait for sheet\");\r\n            while (!props.doc.isOpen()) {\r\n                console.log(\"check\");\r\n                await sleep(1.0);\r\n            }\r\n            console.log(\"done\");\r\n            let tD = new Date();\r\n            const result = await props.doc.sheetsByDate(tD);\r\n            if (!result)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                prop.type = toast.TYPE.WARNING;\r\n                toast.warning(\r\n                    text.reloadPage, toastProp);\r\n                prop.type = toast.TYPE.ERROR;\r\n                toast.error(text.noSheet, toastProp);\r\n                return;\r\n            }\r\n            let initNoti = null;\r\n            const cachedData = props.doc.getCachedList();\r\n            if (!cachedData.has(result.header.id.toString()))\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, toastProp);\r\n            }\r\n            const tS = result.sheet;\r\n            const date = result.date;\r\n            await props.doc.readList(result.header.id);\r\n            console.log(\"tS\");\r\n            console.log(tS.title);\r\n            setTodayDate(date);\r\n\r\n            if (initNoti)\r\n            {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.autoClose = 3000;\r\n                prop.render = text.loaded;\r\n                toast.update(initNoti, prop);\r\n            }\r\n        }\r\n        initialize();\r\n\r\n    }, [props]);\r\n\r\n    function getCurrentTime() {\r\n        return new Date().toLocaleTimeString(\"en-US\", {\r\n            hour12: true,\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n        });\r\n    }\r\n\r\n    async function handleScan(data) {\r\n        const tick = new Date().getTime();\r\n        console.log(\"reached function \" + tick + \" \" + data);\r\n        const id = parseInt(data);\r\n        if (id > 0) scanList.push({tick:tick, id:id});\r\n\r\n        return;\r\n    }\r\n\r\n    function checkShutter() {\r\n        const ret = shutter;\r\n        shutter = false;\r\n        return ret;\r\n    }\r\n\r\n    function Recent() {\r\n        const header = (<tr><th id=\"name\">Name</th><th id=\"action\">action</th><th id=\"time\">time</th></tr>);\r\n        return (<table><tbody>{header}\r\n            {recentList.map(entry => (\r\n                <tr key={entry[0]}>\r\n                    <td key=\"name\" id=\"name\">{entry[1]}</td>\r\n                    <td key=\"action\" id=\"action\">{entry[2]}</td>\r\n                    <td key=\"time\" id=\"time\">{entry[3]}</td>\r\n                </tr>\r\n               ))\r\n            }\r\n        </tbody></table>)\r\n    }\r\n\r\n    function checkDuplicate(id) {\r\n        for (let h of scanHistory)\r\n        {\r\n            if (h.id === id) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Set QR code scan updater\r\n    useEffect(() => {\r\n        async function checkId(id)\r\n        {\r\n            console.log(\"handling scanning \" + id);\r\n\r\n            // Locate student in the spreadsheet today\r\n            const currentTime = getCurrentTime();\r\n\r\n            const info = await props.doc.getStudent(id);\r\n            if (!info)\r\n            {\r\n                // Student does not exist\r\n                toast.error(text.noStudent, toastProp);\r\n                return;\r\n            }\r\n            console.log(\"Student ID: \" + id + \" Idx:  \" + info.idx);\r\n            // Determine action to take\r\n            let action = null;\r\n            if (info.checkIn.valueType == null) {\r\n                // Check student in\r\n                info.checkIn.value = currentTime;\r\n                action = \"Check In\";\r\n\r\n                toast.success(text.checkIn.format(info.name.value, currentTime), toastProp);\r\n            } else if (info.checkOut.valueType == null) {\r\n                // Check student out\r\n                info.checkOut.value = currentTime;\r\n                action = \"Check Out\";\r\n\r\n                toast.success(text.checkOut.format(info.name.value, currentTime), toastProp);\r\n            } else {\r\n                // Student check in and out are both filled\r\n                toast.warn(\r\n                    text.alreadyDone.format(info.name.value), toastProp);\r\n                return;\r\n            }\r\n            console.log(action + \" \" + currentTime);\r\n            addToRecentList([info.name.value, action, currentTime]);\r\n            await props.doc.updateCell();\r\n            shutter = true;\r\n        }\r\n\r\n        const interval = setInterval(async () => {\r\n            const tick = new Date().getTime();\r\n            let timeSec = new Date().toLocaleTimeString(\"en-US\", {\r\n                hour12: true,\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: \"numeric\"\r\n            });\r\n            setCurrentTimeSec(timeSec);\r\n            while (scanHistory.length > 0 && tick - scanHistory[0].tick > CHECK_INTERVAL)\r\n            {\r\n                scanHistory.shift();\r\n            }\r\n            while (scanList.length > 0)\r\n            {\r\n                let entry = scanList.shift();\r\n\r\n                if (tick - entry.tick > SCAN_INTERVAL || checkDuplicate(entry.id)) continue;\r\n                scanHistory.push(entry);\r\n                await checkId(entry.id);\r\n                break;\r\n            }\r\n            return () => clearInterval(interval);\r\n        }, 200)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"scan\">\r\n            <div id=\"title\" >\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\"/>\r\n                <h1> SVKS Check In/Out </h1>\r\n            </div>\r\n            <div id=\"clock\">\r\n            {todayDate} {currentTimeSec}\r\n            </div>\r\n            <div id=\"contents\">\r\n                <div id=\"reader\">\r\n                    <Reader\r\n                        onScan={handleScan}\r\n                        periodic={checkShutter}/>\r\n                </div>\r\n                <div id=\"recent\">\r\n                    <h2>\r\n                        Recent Check In/Out\r\n                    </h2>\r\n                    <Recent />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scan;\r\n","import React from \"react\";\r\nexport const ToPrint = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div\r\n            className=\"toPrint\"\r\n            ref={ref}\r\n            style={{\r\n                width: \"auto\",\r\n                // position: \"absolute\",\r\n                // // top: \"-100%\",\r\n                // zIndex: \"-100\",\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default ToPrint;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Scan.css\"\r\nimport QRCode from \"react-qr-code\";\r\nimport { toast } from \"react-toastify\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport { ToPrint } from \"../components/ToPrint\";\r\nimport { sleep, toastProp, CODE_PER_PAGE, CODE_PER_SCREEN } from \"../Util\";\r\nimport text from \"../api/text\";\r\n\r\nfunction Print(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [printList, setPrintList] = useState([]);\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedCodes, setSelectedCodes] = useState([]);\r\n    const [displayedCodes, setDisplayedCodes] = useState([]);\r\n    const [showMarked, setShowMarked] = useState(false);\r\n    const [showSearched, setShowSearched] = useState(false);\r\n    const [pageNum, setPageNum] = useState(0);\r\n\r\n    const printRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => printRef.current,\r\n    });\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            while (!props.doc.isOpen()) {\r\n                await sleep(0.1);\r\n            }\r\n\r\n            let sheetInfo = await props.doc.findMostRecentSheet();\r\n\r\n            if (!sheetInfo)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                toast.error(text.failedToOpen, prop);\r\n                return;\r\n            }\r\n            const cachedData = props.doc.getCachedList();\r\n            let initNoti = null;\r\n            if (!cachedData.has(sheetInfo.header.id.toString()) ||\r\n                !cachedData.has(sheetInfo.header.name.toString()) ||\r\n                (sheetInfo.header.print &&\r\n                 !(sheetInfo.header.print in cachedData) ))\r\n            {\r\n                console.log(\"Data should be loaded\");\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, prop);\r\n            }\r\n\r\n            console.log(sheetInfo.date);\r\n            const idIdx = sheetInfo.header.id;\r\n            const idList = await props.doc.readList(idIdx);\r\n            const nameIdx = sheetInfo.header.name;\r\n            const nameList = await props.doc.readList(nameIdx);\r\n            const list = [];\r\n            for (let i = 0 ; i < Math.min(idList.length, nameList.length); i++)\r\n            {\r\n               list.push({id: idList[i],  name: nameList[i]});\r\n            }\r\n            setStudentList(list);\r\n\r\n            const printIdx = sheetInfo.header.print;\r\n            if (printIdx)\r\n            {\r\n                setPrintList(await props.doc.readList(printIdx));\r\n            }\r\n\r\n            console.log(\"Sheet read \" + list.length);\r\n            if (initNoti) {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.render = text.succeededToOpen;\r\n                prop.autoClose = 3000;\r\n                toast.update(initNoti, prop);\r\n            }\r\n        }\r\n        initialize();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findStudents(text) {\r\n                let results = [];\r\n\r\n                for (const row of studentList) {\r\n                    if (results.length > 4) break;\r\n                    if ((row.id && row.id.toString().includes(text)) ||\r\n                        (row.name && row.name.toString().includes(text)))\r\n                    {\r\n                        let resultString = `${row.name}:  ${row.id}`;\r\n                        let resultObject = {\r\n                            text: resultString,\r\n                            name: row.name,\r\n                            id: row.id.toString(),\r\n                        };\r\n                        results.push(resultObject);\r\n                    }\r\n                }\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findStudents(searchQuery);\r\n                    if (sr.length > 0) setSearchResults(sr);\r\n                } else {\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        [searchQuery, studentList]\r\n    );\r\n\r\n    useEffect(\r\n        () => {\r\n            setShowMarked(printList.length > 0);\r\n        }, [printList]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            setShowSearched(searchResults.length > 0)\r\n        }, [searchResults]\r\n    );\r\n    useEffect(\r\n        () => {\r\n            const length = selectedCodes.length;\r\n            if (length > CODE_PER_SCREEN)\r\n            {\r\n                const startIdx = pageNum * CODE_PER_SCREEN;\r\n                const count = Math.min(CODE_PER_SCREEN, length - startIdx);\r\n                setDisplayedCodes(selectedCodes.slice(startIdx,startIdx+count));\r\n            }\r\n            else\r\n            {\r\n                setDisplayedCodes(selectedCodes);\r\n                setPageNum(0);\r\n            }\r\n        }, [selectedCodes, pageNum]\r\n    );\r\n\r\n    async function addMarkedStudents() {\r\n        let results = [];\r\n\r\n        for (let i = 0 ; i < printList.length ; i++)\r\n        {\r\n            if (printList[i] && printList[i].toLowerCase() === \"x\" && studentList[i].id != null)\r\n            {\r\n                const entry = studentList[i];\r\n                let resultString = `${entry.name}:  ${entry.id}`;\r\n                let resultObject = {\r\n                    text: resultString,\r\n                    name: entry.name,\r\n                    id: entry.id.toString()\r\n                };\r\n                results.push(resultObject);\r\n            }\r\n        }\r\n        setSelectedCodes([...selectedCodes, ...results]);\r\n    }\r\n\r\n    function addSelected() {\r\n        let results = [];\r\n        for (let i = 0 ; i < searchResults.length ; i++)\r\n        {\r\n            let result = searchResults[i];\r\n            let add = true;\r\n            selectedCodes.map((code) => {\r\n                if (code.id === result.id)\r\n                {\r\n                    add = false;\r\n                }\r\n                return \"\"\r\n            });\r\n            if (add)\r\n            {\r\n                results.push(result);\r\n            }\r\n        }\r\n        setSelectedCodes([...selectedCodes, ...results]);\r\n    }\r\n\r\n    function addAll() {\r\n        let results = [];\r\n        setSelectedCodes([]);\r\n        let ids = new Set();\r\n        for (const row of studentList) {\r\n            if (row.id == null || row.id.length === 0 || row.name == null || ids.has(row.id))\r\n            {\r\n                continue;\r\n            }\r\n            console.log(row)\r\n            let resultString = `${row.name}:  ${row.id}`;\r\n            let resultObject = {\r\n                text: resultString,\r\n                name: row.name,\r\n                id: row.id.toString(),\r\n            };\r\n            results.push(resultObject);\r\n            ids.add(row.id);\r\n        }\r\n        setSelectedCodes(results);\r\n    }\r\n\r\n    function removeAll() {\r\n        setSelectedCodes([]);\r\n    }\r\n\r\n    function movePrev() {\r\n        if (pageNum > 0)\r\n        {\r\n            setPageNum(pageNum - 1);\r\n        }\r\n    }\r\n\r\n    function moveNext() {\r\n        if (selectedCodes.length > (pageNum + 1) * CODE_PER_SCREEN)\r\n        {\r\n            setPageNum(pageNum + 1);\r\n        }\r\n    }\r\n\r\n    function printCodes() {\r\n        let pages = [];\r\n        for (let i = 0 ; i < selectedCodes.length ; i += CODE_PER_PAGE)\r\n        {\r\n            const count = Math.min(CODE_PER_PAGE, selectedCodes.length - i);\r\n            pages.push(selectedCodes.slice(i, i + count));\r\n        }\r\n        return pages.map((page) => (\r\n                    <div id=\"qrList\">\r\n                        {page.map((code) => (\r\n                            <div key={code.id} id=\"qrCode\" >\r\n                                <QRCode size={160} value={code.id} />\r\n                                <p id=\"qrName\" >\r\n                                    {code.text}\r\n                                </p>\r\n                            </div>\r\n                         ))}\r\n                    </div>\r\n               ));\r\n    }\r\n\r\n    return (\r\n        <div id=\"print\">\r\n            <div id=\"title\">\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\" ></img>\r\n                <h1> Print QR Codes </h1>\r\n            </div>\r\n            <div id=\"printContents\" >\r\n                <input id=\"search\"\r\n                    placeholder={\"Search for student or enter a number...\"}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {searchResults.map((result) => {\r\n                    return (\r\n                        <div key={result.id} id=\"searchResult\"\r\n                            onClick={function () {\r\n                                let add = true;\r\n                                selectedCodes.map((code) => {\r\n                                    if (code.id === result.id)\r\n                                    {\r\n                                        add = false;\r\n                                    }\r\n                                    return \"\"\r\n                                });\r\n                                if (add)\r\n                                {\r\n                                    setSelectedCodes([...selectedCodes, result]);\r\n                                }\r\n                            }}>\r\n                            <h4> {result.text} </h4>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n            {displayedCodes.length > 0 && (\r\n                <>\r\n                    <div id=\"selected\">\r\n                        {displayedCodes.map((code) => (\r\n                            <div key={code.id} id=\"selectedItem\">\r\n                                <QRCode size={100} value={code.id} />\r\n                                <p id=\"qrName\"> {code.text} </p>\r\n                                <button id=\"deleteButton\"\r\n                                    onClick={function () {\r\n                                        setSelectedCodes(\r\n                                            selectedCodes.filter(\r\n                                                (c) => parseInt(c.id) !== parseInt(code.id)\r\n                                            )\r\n                                        );\r\n                                    }}\r\n                                > X </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <ToPrint ref={printRef}>\r\n                        {printCodes()}\r\n                    </ToPrint>\r\n                </>\r\n            )}\r\n            {selectedCodes.length > CODE_PER_SCREEN && (\r\n                <div id=\"pageControl\" hidden={selectedCodes.length <= CODE_PER_SCREEN}>\r\n                    <button id=\"prevPage\" onClick={movePrev}> &lt;&lt; </button>\r\n                    <p id=\"pageNum\"> {pageNum+1} </p>\r\n                    <button id=\"nextPage\" onClick={moveNext}> &gt;&gt; </button>\r\n                </div>\r\n            )}\r\n            <button id=\"printButton\" hidden={displayedCodes.length === 0} onClick={handlePrint}>\r\n                Print codes\r\n            </button>\r\n            <button id=\"selectSearched\" hidden={!showSearched} onClick={addSelected}>\r\n                Select all search results\r\n            </button>\r\n            <button id=\"selectAll\" onClick={addAll}>\r\n                Select all\r\n            </button>\r\n            <button id=\"selectMarked\" hidden={!showMarked} onClick={addMarkedStudents}>\r\n                Print codes for marked students.\r\n            </button>\r\n            <button id=\"removeAll\" hidden={(!selectedCodes.length > 0)} onClick={removeAll}>\r\n                Remove all\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Print;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Scan.css\"\r\nimport { toast } from \"react-toastify\";\r\nimport Logo from \"../images/Logo.png\";\r\nimport { useDebounce } from \"use-debounce\";\r\nimport { sleep, toastProp } from \"../Util\";\r\nimport text from \"../api/text\";\r\n\r\nconst selectedIds = new Set();\r\n\r\nfunction getCurrentTime() {\r\n    return new Date().toLocaleTimeString(\"en-US\", {\r\n        hour12: true,\r\n        hour: \"numeric\",\r\n        minute: \"numeric\",\r\n    });\r\n}\r\n\r\nfunction Manual(props) {\r\n    const [inputText, setInputText] = useState(\"\");\r\n    const [studentList, setStudentList] = useState([]);\r\n    const [searchQuery] = useDebounce(inputText, 50);\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const [selectedId, selectIdImpl] = useState({id:-1});\r\n    const [todayDate, setTodayDate] = useState(new Date().toLocaleDateString());\r\n    const [currentTimeSec, setCurrentTimeSec] = useState(\"\");\r\n\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            toast.dismiss();\r\n            while (!props.doc.isOpen()) {\r\n                await sleep(0.1);\r\n            }\r\n\r\n            let tD = new Date();\r\n            const sheetInfo = await props.doc.sheetsByDate(tD);\r\n\r\n            if (!sheetInfo)\r\n            {\r\n                const prop = toastProp;\r\n                prop.autoClose = 3000;\r\n                toast.error(text.failedToOpen, prop);\r\n                return;\r\n            }\r\n            const cachedData = props.doc.getCachedList();\r\n            let initNoti = null;\r\n            if (!cachedData.has(sheetInfo.header.id.toString()) ||\r\n                !cachedData.has(sheetInfo.header.name.toString()) )\r\n            {\r\n                console.log(\"Data should be loaded\");\r\n                const prop = toastProp;\r\n                prop.autoClose = false;\r\n                initNoti = toast.info(text.loading, prop);\r\n            }\r\n\r\n\r\n            console.log(sheetInfo.date);\r\n            const idIdx = sheetInfo.header.id;\r\n            const idList = await props.doc.readList(idIdx);\r\n            const nameIdx = sheetInfo.header.name;\r\n            const nameList = await props.doc.readList(nameIdx);\r\n            const list = [];\r\n            for (let i = 0 ; i < Math.min(idList.length, nameList.length); i++)\r\n            {\r\n               list.push({id: idList[i],  name: nameList[i]});\r\n            }\r\n            setStudentList(list);\r\n\r\n            console.log(\"Sheet read \" + list.length);\r\n            if (initNoti) {\r\n                const prop = toastProp;\r\n                prop.type = toast.TYPE.SUCCESS;\r\n                prop.autoClose = 3000;\r\n                prop.render = text.succeededToOpen;\r\n                toast.update(initNoti, prop);\r\n            }\r\n            setTodayDate(sheetInfo.date);\r\n        }\r\n        initialize();\r\n        return () => toast.dismiss();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(\r\n        () => {\r\n            async function findStudents(text) {\r\n                let results = [];\r\n\r\n                for (const row of studentList) {\r\n                    if (results.length > 4) break;\r\n                    if ((row.id && row.id.toString().includes(text)) ||\r\n                        (row.name && row.name.toString().includes(text)))\r\n                    {\r\n                        let resultString = `${row.id}: ${row.name}`;\r\n                        let resultObject = {\r\n                            id: row.id,\r\n                            name: row.name,\r\n                            text: resultString,\r\n                        };\r\n                        results.push(resultObject);\r\n                        selectedIds.add(row.id);\r\n                    }\r\n                }\r\n                return results;\r\n            }\r\n            async function query() {\r\n                if (searchQuery) {\r\n                    let sr = await findStudents(searchQuery);\r\n                    if (sr.length > 0)\r\n                    {\r\n                        setSearchResults(sr);\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"No matching student\");\r\n                        setSearchResults([]);\r\n                    }\r\n                } else {\r\n                    console.log(\"No matching student\");\r\n                    setSearchResults([]);\r\n                }\r\n            }\r\n            query();\r\n        },\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        [searchQuery, studentList]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(async () => {\r\n            let timeSec = new Date().toLocaleTimeString(\"en-US\", {\r\n                hour12: true,\r\n                hour: \"numeric\",\r\n                minute: \"numeric\",\r\n                second: \"numeric\"\r\n            });\r\n            setCurrentTimeSec(timeSec);\r\n            return () => clearInterval(interval);\r\n        }, 200)\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const checkIn = (id) => {\r\n        console.log('Check in ' + id);\r\n        const currentTime = getCurrentTime();\r\n        selectedId.checkIn.value = currentTime;\r\n        props.doc.updateCell();\r\n        toast.success(text.checkIn.format(selectedId.name.value, currentTime), toastProp);\r\n    }\r\n\r\n    const checkOut = (id) => {\r\n        console.log('Check out ' + id);\r\n        const currentTime = getCurrentTime();\r\n        selectedId.checkOut.value = currentTime;\r\n        props.doc.updateCell();\r\n        toast.success(text.checkOut.format(selectedId.name.value, currentTime), toastProp);\r\n    }\r\n\r\n    const selectId = async (id) => {\r\n        const info = await props.doc.getStudent(id);\r\n        console.log(\"Select \" + selectedId.id + \" \" + id);\r\n        console.log(selectedId);\r\n        if (!selectedId || !selectedId.id || selectedId.id !== id)\r\n        {\r\n            console.log(\"Selected\");\r\n            console.log(info);\r\n            selectIdImpl({...info, id:id});\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Deselect\");\r\n            selectIdImpl({id:-1});\r\n        }\r\n    }\r\n\r\n    const showEntries = (result) => {\r\n        let cIn, cOut;\r\n        let cInDisabled;\r\n        let cOutDisabled;\r\n        cInDisabled = cOutDisabled = false;\r\n        cIn = \"Check In\";\r\n        cOut = \"Check Out\";\r\n        const hidden = (selectedId.id !== result.id);\r\n        if (!hidden)\r\n        {\r\n            if (selectedId.checkIn.valueType)\r\n            {\r\n                cIn = \"Check In: \" + selectedId.checkIn.formattedValue;\r\n                cInDisabled = true;\r\n            }\r\n            if (selectedId.checkOut.valueType)\r\n            {\r\n                cOut = \"Check Out: \" + selectedId.checkOut.formattedValue;\r\n                cOutDisabled = true;\r\n            }\r\n        }\r\n        return (<div key={result.id}><button type=\"button\" id=\"searchResult\" onClick={async () => {await selectId(result.id);}}> {result.text} </button>\r\n                    <div hidden={hidden}>\r\n                        <button type=\"button\" id=\"checkInOut\" disabled={cInDisabled} onClick={() => {checkIn(result.id)}}> {cIn} </button>\r\n                        <button type=\"button\" id=\"checkInOut\" disabled={cOutDisabled} onClick={() => {checkOut(result.id)}}> {cOut} </button>\r\n                    </div>\r\n                </div>);\r\n    }\r\n\r\n    return (\r\n        <div id=\"manual\">\r\n            <div id=\"title\">\r\n                <img id=\"logo\" src={Logo} alt=\"SVKS\" ></img>\r\n                <h1> Manual Check In/Out </h1>\r\n            </div>\r\n            <div id=\"clock\">\r\n            {todayDate} {currentTimeSec}\r\n            </div>\r\n            <div id=\"manualInput\" >\r\n                <input id=\"search\"\r\n                    placeholder={\"Search for student or enter a number...\"}\r\n                    value={inputText}\r\n                    onChange={(event) => {\r\n                        setInputText(event.target.value);\r\n                    }} />\r\n\r\n                {\r\n                    searchResults.map((result) => {\r\n                        return showEntries(result);\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Manual;\r\n","import { spreadsheetID } from \"./api/spreadsheetID\";\nimport config from \"./api/config\";\nimport header from \"./api/header\";\n\nconst { GoogleSpreadsheet } = require(\"google-spreadsheet\");\n\nconst MAX_COLUMN = 26;\nconst ASCII_A = 65;\n\nlet sheetKey;\nif (process.env.NODE_ENV === \"development\")\n{\n    console.log(\"Development mode\");\n    sheetKey = \"development\";\n}\nelse\n{\n    console.log(\"Production mode\");\n    sheetKey = \"production\";\n}\n\nconst dateFormatOptions = [\n    { year: \"numeric\", month: \"numeric\", day: \"numeric\" },\n    { year: \"2-digit\", month: \"numeric\", day: \"numeric\" },\n    { year: \"numeric\", month: \"2-digit\", day: \"numeric\" },\n    { year: \"2-digit\", month: \"2-digit\", day: \"numeric\" },\n    { year: \"numeric\", month: \"numeric\", day: \"2-digit\" },\n    { year: \"2-digit\", month: \"numeric\", day: \"2-digit\" },\n    { year: \"numeric\", month: \"2-digit\", day: \"2-digit\" },\n    { year: \"2-digit\", month: \"2-digit\", day: \"2-digit\" },\n];\n\nconst _MS_PER_DAY = 1000 * 60 * 60 * 24;\nfunction dateDiffInDays(a, b) {\n    // https://stackoverflow.com/questions/3224834/get-difference-between-2-dates-in-javascript\n    // Discard the time and time-zone information.\n    const utc1 = Date.UTC(a.getFullYear(), a.getMonth(), a.getDate());\n    const utc2 = Date.UTC(b.getFullYear(), b.getMonth(), b.getDate());\n\n    return Math.abs(Math.floor((utc2 - utc1) / _MS_PER_DAY));\n}\n\n\nfunction findHeader(value, headers)\n{\n    for (let h of headers)\n        if (h === value) return true ;\n\n    return false;\n}\n\nclass Doc {\n    constructor() {\n        console.log(\"Create Doc class\");\n        const doc = new GoogleSpreadsheet(spreadsheetID[sheetKey]);\n        const sheetInfo = {sheet: null, date: null, header: null, cachedList: {}};\n        this.state = {doc: doc, initialized: false, sheetInfo: sheetInfo};\n    }\n\n    async openDoc() {\n        console.log('try to read sheet');\n        await this.state.doc.useServiceAccountAuth(config);\n        console.log('Auth Done');\n        await this.state.doc.loadInfo(); // loads document properties and worksheets\n        console.log('Done');\n        this.state.initialized = true;\n    }\n\n    isOpen() {\n        return this.state.initialized;\n    }\n\n    getCachedList() {\n        return new Set(Object.keys(this.state.sheetInfo.cachedList));\n    }\n\n    async sheetsByTitle(arg) {\n        this.state.sheetInfo.sheet = await this.state.doc.sheetsByTitle[arg];\n        this.state.sheetInfo.date = arg;\n\n        return this.state.sheetInfo;\n    }\n\n    async sheetsByDate(date) {\n        for (let option of dateFormatOptions) {\n            const str = date.toLocaleDateString(\"en-US\", option);\n            if (this.state.sheetInfo.date && str === this.state.sheetInfo.date)\n            {\n                console.log(\"Found \" + str);\n                console.log(this.state.sheetInfo);\n                return this.state.sheetInfo;\n            }\n        }\n        let found = false;\n        for (let option of dateFormatOptions) {\n            const dateStr = date.toLocaleDateString(\"en-US\", option);\n            const sheet = await this.state.doc.sheetsByTitle[dateStr];\n            if (sheet) {\n                this.state.sheetInfo.date = dateStr;\n                this.state.sheetInfo.sheet = sheet;\n                found = true;\n                break;\n            }\n        }\n        if (!found)\n            return null;\n\n        console.log(\"Found sheet \" + this.state.sheetInfo.sheet);\n\n        // Find spreadsheet headers\n        await this.state.sheetInfo.sheet.loadCells('A1:Z1');\n        const header = this.createHeader(this.state.sheetInfo.sheet);\n        console.log(header);\n\n        this.state.sheetInfo.header = header;\n\n        return this.state.sheetInfo;\n    }\n\n    createHeader(tS = this.state.sheetInfo.sheet)\n    {\n        let idIdx = null;\n        let nameIdx = null;\n        let classIdx = null;\n        let checkInIdx = null;\n        let checkOutIdx = null;\n        let printIdx = null;\n        if (!tS)\n            return {};\n        for (let i = 0 ; i < Math.min(MAX_COLUMN, tS.columnCount) ; i++)\n        {\n            const entry = tS.getCell(0, i);\n            if (entry.valueType == null) continue;\n            nameIdx = (findHeader(entry.value, header.name)) ? i : nameIdx;\n            idIdx = (findHeader(entry.value, header.id)) ? i : idIdx;\n            classIdx = (findHeader(entry.value, header.class)) ? i : classIdx;\n            checkInIdx = (findHeader(entry.value, header.checkIn)) ? i : checkInIdx;\n            checkOutIdx = (findHeader(entry.value, header.checkOut)) ? i : checkOutIdx;\n            printIdx = (findHeader(entry.value, header.print)) ? i : printIdx;\n        }\n        return {id:idIdx, name:nameIdx, class:classIdx, checkIn:checkInIdx, checkOut:checkOutIdx, print:printIdx};\n    }\n\n    async readList(idIdx, tS = this.state.sheetInfo.sheet)\n    {\n        if (idIdx in this.state.sheetInfo.cachedList)\n            return this.state.sheetInfo.cachedList[idIdx];\n\n        let rowIdx = 0;\n        const ROW_RANGE = 2000;\n        let ids = [];\n        if (!tS)\n            return [];\n        let lastIdx = null;\n        const rowSize = tS.rowCount;\n        while (rowIdx < rowSize-1)\n        {\n            // Read ROW_RANGE cell\n            const increment = Math.min(rowSize - rowIdx, ROW_RANGE);\n            const query = String.fromCharCode(ASCII_A+idIdx) + (rowIdx+1) + \":\" +\n                          String.fromCharCode(ASCII_A+idIdx) + (rowIdx+increment);\n            console.log(toString(idIdx) + \" \" + query);\n            await tS.loadCells(query);\n\n            let nullCount = 0;\n            for (let i = 0 ; i < ROW_RANGE ; i++)\n            {\n                const entry = tS.getCell(rowIdx + i, idIdx);\n                let id = null;\n                if (entry.valueType == null)\n                {\n                    nullCount++;\n                }\n                else\n                {\n                    id = entry.value;\n                    lastIdx = rowIdx + i;\n                }\n                ids.push(id);\n            }\n            // If all ROW_RANGE cells are empty, stop reading\n            if (nullCount === ROW_RANGE) break;\n            rowIdx += increment;\n        }\n        ids[0] = \"\";\n        ids = ids.slice(0, lastIdx+1);\n\n        this.state.sheetInfo.cachedList[idIdx] = ids;\n\n        return ids;\n    }\n\n    async getStudent(id) {\n        const todaySheet = this.state.sheetInfo.sheet;\n        if (!todaySheet)\n            return null;\n\n        // Locate student in the spreadsheet today\n        let studentNumber = id;\n        let studentRowNumber = await this.findStudentRow(studentNumber);\n\n        if (!studentRowNumber) {\n            return null;\n        }\n\n        const header = this.state.sheetInfo.header;\n        // Student ID is found\n        console.log(\"Student ID: \" + studentNumber + \" Index:\" + studentRowNumber);\n        const query = String.fromCharCode(ASCII_A) + (studentRowNumber) + \":\" +\n                      String.fromCharCode(ASCII_A+MAX_COLUMN-1) + (studentRowNumber);\n        console.log(query);\n        await todaySheet.loadCells(query);\n        const idx = studentRowNumber - 1;\n        console.log(\"Get Cell \" + idx + \" \" + header.name);\n        const name = todaySheet.getCell(idx, header.name);\n        const checkIn = todaySheet.getCell(idx, header.checkIn);\n        const checkOut = todaySheet.getCell(idx, header.checkOut);\n\n        return {idx: idx, name: name, checkIn: checkIn, checkOut: checkOut};\n    }\n\n    async updateCell()\n    {\n        const todaySheet = this.state.sheetInfo.sheet;\n        if (!todaySheet)\n            return null;\n        await todaySheet.saveUpdatedCells();\n    }\n\n    async findStudentRow(ID) {\n        const idList = await this.readList(this.state.sheetInfo.header.id);\n        console.log(\"finding student row \" + idList.length);\n        for (let i = 0 ; i < idList.length ; i++)\n        {\n            if (idList[i] && idList[i] === ID) return i + 1;\n        }\n        return null;\n    }\n\n    async findMostRecentSheet() {\n        let sheetDate = new Date();\n        let today = new Date();\n        while (dateDiffInDays(today, sheetDate) < 40)\n        {\n            const sheetInfo = await this.sheetsByDate(sheetDate);\n            if (sheetInfo)\n                return sheetInfo;\n            sheetDate.setDate(sheetDate.getDate() - 1);\n        }\n        return null;\n    }\n}\n\nexport default Doc;\n\n","export const spreadsheetID = {production: \"1FqeRNFlZZ7aJdtYRmjZ1kRb2-sarN9aoTMGyu4jhGKs\",\n                              development: \"12AWolV6lI99LM6NNP1bUwYanAuNDSWRJI8X4-ozM98Q\"};\n","import React, { useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Scan from \"./pages/Scan\";\r\nimport Print from \"./pages/Print\";\r\nimport Manual from \"./pages/Manual\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { Zoom } from \"react-toastify\";\r\nimport { HashRouter as Router, Routes, Route, Link} from \"react-router-dom\";\r\nimport Doc from \"./Doc\";\r\n\r\nconst doc = new Doc();\r\nfunction App() {\r\n    useEffect(function () {\r\n        async function initialize() {\r\n            console.log(\"Initialize app\");\r\n            console.log(process.env.APP_NAME);\r\n            console.log(process.env.APP_VERSION);\r\n            doc.openDoc();\r\n        }\r\n        initialize();\r\n    }, []);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <nav id=\"nav\">\r\n                    <table id=\"nav\"><tbody>\r\n                    <tr>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/\"><button id=\"nav_scan\">Scan</button></Link>\r\n                        </td>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/manual\"><button id=\"nav_manual\">Manual</button></Link>\r\n                        </td>\r\n                        <td id=\"nav_item\">\r\n                            <Link to=\"/print\"><button id=\"nav_print\">Print</button></Link>\r\n                        </td>\r\n                    </tr>\r\n                    </tbody></table>\r\n                </nav>\r\n            </div>\r\n\r\n            <hr />\r\n\r\n            <div className=\"App\">\r\n                <Routes>\r\n                    <Route path=\"/\" element={<Scan doc={doc} />} />\r\n                    <Route path=\"/print\" element={<Print doc={doc}/>} />\r\n                    <Route path=\"/manual\" element={<Manual doc={doc}/>} />\r\n                </Routes>\r\n\r\n                <ToastContainer\r\n                    position=\"bottom-center\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    draggable\r\n                    pauseOnHover\r\n                    pauseOnFocusLoss={false}\r\n                    transition={Zoom}\r\n                    icon={false}\r\n                />\r\n                <h2>\r\n                    v {process.env.REACT_APP_VERSION}\r\n                </h2>\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}