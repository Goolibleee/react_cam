{"version":3,"sources":["reportWebVitals.js","Reader.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Reader","props","videoRef","useRef","canvasRef","overlayRef","_useState","useState","_useState2","_slicedToArray","result","setResult","_useState3","_useState4","resolution","setResolution","useEffect","onScan","data","isMounted","console","log","inter","setInterval","requestAnimationFrame","tick","clearInterval","navigator","mediaDevices","getUserMedia","video","facingMode","zoom","stream","_stream$getVideoTrack","getVideoTracks","track","capabilities","getCapabilities","getSettings","current","srcObject","setAttribute","play","imageWidth","videoWidth","imageHeight","videoHeight","toString","focusDistance","document","getElementsById","innerHtml","applyConstraints","advanced","focusMode","min","_unused","window","innerWidth","innerHeight","ctx","getContext","drawLine","x","y","x1","y1","color","width","context","info","style","arguments","length","undefined","_style$color","_style$width","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","height","axios","method","mode","url","headers","withCredentials","credentials","drawImage","_jsxs","children","_jsx","id","className","ref","hidden","type","onClick","canvas","img","toDataURL","crossDomain","image","capture","process","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.88127659.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport \"./Reader.css\";\nimport axios from \"axios\";\n\n\nfunction Reader(props) {\n    const videoRef = useRef();\n    const canvasRef = useRef();\n    const overlayRef = useRef();\n    const [result, setResult] = useState();\n    const [resolution, setResolution] = useState([0,0]);\n\n    useEffect(\n        function () {\n            if (result) {\n                props.onScan(result.data);\n                setResult(null);\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [result]\n    );\n\n    useEffect(function () {\n        let isMounted = true;\n        console.log(\"Set interval\");\n        const inter = setInterval(() => {\n            if (!isMounted)\n            {\n                console.log(\"Unmounted reader call\");\n                return;\n            }\n            requestAnimationFrame(tick);\n        }, 2000);\n        return () => {\n            console.log(\"Clear interval for reader\");\n            isMounted = false;\n            clearInterval(inter);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(\n        function () {\n            navigator.mediaDevices\n                .getUserMedia({ video: { facingMode: \"environment\", zoom: true } })\n                .then(function (stream) {\n                    console.log(stream);\n                    console.log(\"TEST\");\n                    try {\n                        const [track] = stream.getVideoTracks();\n                        const capabilities = track.getCapabilities();\n                        const settings = track.getSettings();\n                        videoRef.current.srcObject = stream;\n                        videoRef.current.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n                        videoRef.current.play();\n                        const imageWidth  = videoRef.current.videoWidth;\n                        const imageHeight = videoRef.current.videoHeight;\n                        setResolution([imageWidth, imageHeight]);\n                        console.log(\"Set resulution \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n/*\n                        if ('zoom' in settings)\n                        {\n                            track.applyConstraints({advanced: [ {zoom: capabilities.zoom.max}]});\n                        }\n*/\n                        if (capabilities.focusDistance)\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Change focus\");\n                            track.applyConstraints({advanced: [ {focusMode: \"auto\", focusDistance: capabilities.focusDistance.min}]});\n                        }\n                        else\n                        {\n                            const text = document.getElementsById(\"text\").innerHtml(\"Cannot change focus\");\n                        }\n                    } catch {}\n                });\n            console.log(window.innerWidth.toString() + \"x\" + window.innerHeight.toString());\n        },\n        [videoRef]\n    );\n    useEffect(\n        function () {\n            var ctx = overlayRef.current.getContext(\"2d\");\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n //           drawLine(ctx, { x: 20, y: 20, x1: 20, y1: 100 });\n\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: imageWidth, y1: imageHeight/2-75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2+75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: 0, y: imageHeight/2-75, x1: 0, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n            drawLine(ctx, { x: imageWidth, y: imageHeight-75, x1: imageWidth, y1: imageHeight/2+75 }, { color: 'red', width:5 });\n\n//            drawLine(ctx, { x: 300, y: 250, x1: 260, y1: 70 }, { color: 'green', width: 5 });\n\n//            drawLine(ctx, { x: 70, y: 240, x1: 160, y1: 120 }, { color: 'blue' });\n\n            drawLine(ctx, { x: 0, y: 3, x1: imageWidth, y1: 3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 3, y: 0, x1: 3, y1: imageHeight }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: 0, y: imageHeight-3, x1: imageWidth, y1: imageHeight-3 }, { color: 'green', width: 5 });\n            drawLine(ctx, { x: imageWidth-3, y: 0, x1: imageWidth-3, y1: imageHeight}, { color: 'green', width: 5 });\n\n        }, [resolution]\n    );\n    const drawLine = (context, info, style = {}) => {\n        const { x, y, x1, y1 } = info;\n        const { color = 'black', width = 1 } = style;\n\n        context.beginPath();\n        context.moveTo(x, y);\n        context.lineTo(x1, y1);\n        context.strokeStyle = color;\n        context.lineWidth = width;\n        context.stroke();\n    }\n\n/*\n    var sendBase64ToServer = function(base64) {\n        var httpPost = new XMLHttpRequest(),\n        path = \"http://127.0.0.1:8080/uploadImage\",\n        data = JSON.stringify({image: base64});\n        httpPost.onreadystatechange = function(err) {\n            if (httpPost.readyState == 4 && httpPost.status == 200){\n                console.log(httpPost.responseText);\n            } else {\n                console.log(err);\n            }\n        };\n        // Set the content type of the request to json since that's what's being sent\n        httpPost.setHeader('Content-Type', 'application/json');\n        httpPost.open(\"POST\", path, true);\n        httpPost.send(data);\n    };\n    var uploadImage = function(data, type){\n        sendBase64ToServer(data);\n    };\n*/\n    function capture() {\n        console.log(\"Capture\");\n        var canvas = canvasRef.current.getContext(\"2d\");\n        const imageWidth  = videoRef.current.videoWidth;\n        const imageHeight = videoRef.current.videoHeight;\n        canvasRef.current.width = imageWidth;\n        canvasRef.current.height = imageHeight;\n        canvas.drawImage(\n            videoRef.current,\n            0,\n            0,\n            canvasRef.current.width,\n            canvasRef.current.height\n        );\n        overlayRef.current.height = videoRef.current.videoHeight;\n        overlayRef.current.width = videoRef.current.videoWidth;\n        setResolution([imageWidth, imageHeight]);\n\n        const img = canvasRef.current.toDataURL('image/png');\n//        console.log(img);\n        axios({\n            method: \"post\",\n            mode: 'no-cors',\n            crossDomain: 'true',\n            url: \"https://10.0.0.68:8080/uploadImage\",\n//            url: \"https://localhost:8080/uploadImage\",\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Content-Type\": \"application/json\",\n                \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n            },\n            withCredentials: true,\n            credentials: 'same-origin',\n            data: {\n                image: img\n            }\n        });\n    }\n\n    function tick() {\n\n\n            console.log('tick');\n\n//            var videoElement = document.getElementById(\"video\")\n            console.log(videoRef.current.videoHeight.toString() + \"x\" + videoRef.current.videoWidth);\n            const imageWidth  = videoRef.current.videoWidth;\n            const imageHeight = videoRef.current.videoHeight;\n            canvasRef.current.height = imageWidth;\n            canvasRef.current.width = imageHeight;\n            console.log(\"Resolution changed \" + imageWidth.toString() + \"x\" + imageHeight.toString());\n\n/*\n            if (image) {\n                const str = image.toDataURL();\n                console.log(str);\n            }\n*/\n//            uploadImage(image, \"image/png\");\n            axios({\n                method: \"post\",\n            mode: 'no-cors',\n                url: \"https://10.0.0.68:8080/uploadImage\",\n                headers: {\n                    \"Access-Control-Allow-Origin\": \"*\",\n                    \"Content-Type\": \"application/json\",\n                    \"Access-Control-Allow-Methods\": \"GET, PUT, POST, DELETE, OPTIONS\"\n                },\n                withCredentials: true,\n                credentials: 'same-origin'\n            });\n//            console.log(image);\n\n            var ctx = canvasRef.current.getContext(\"2d\");\n            ctx.drawImage(\n                videoRef.current,\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            /*\n            const str = canvasRef.toDataURL();\n            console.log(str);\n            var imageData = ctx.getImageData(\n                0,\n                0,\n                canvasRef.current.width,\n                canvasRef.current.height\n            );\n            BarcodeReader({\n                image: imageData,\n//                barcode: 'code-2of5',\n                barcode: 'coda-128',\n                options: {}\n            }).then(code => {\n                console.log('['+code+']');\n            }).catch(err => {\n                console.log(err);\n            })\n            */\n            /*\n            var code = jsQR(imageData.data, imageData.width, imageData.height, {\n                inversionAttempts: \"dontInvert\",\n            });\n            if (code) {\n                console.log(code.data);\n                setResult({ data: code.data, time: new Date() });\n            }\n            */\n            return;\n    }\n/*\n        <div>\n                <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} width={640} height={480}></canvas>\n                <Webcam id=\"webcam\" ref={webcamRef} screenshotFormat=\"image/png\" width={640} height={480}\n                    videoConstraints={videoConstraints}\n                />\n            <div>Test 2</div>\n        </div>\n*/\n\n    return (\n        <div>\n                <canvas id=\"overlay\" className=\"overlay\" ref={overlayRef}></canvas>\n                <canvas id=\"canvas\" className=\"canvas\" ref={canvasRef} hidden></canvas>\n                <video id=\"video\" ref={videoRef}/>\n            <div id=\"text\">Test 0</div>\n            <button type=\"button\" onClick={() => capture()}> Capture </button>\n            <h3>\n                v {process.env.REACT_APP_VERSION}\n            </h3>\n        </div>\n    );\n}\n\nexport default Reader;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Reader from \"./Reader\";\n//import Scanner from \"./Scanner\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Reader />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}